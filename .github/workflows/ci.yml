name: CI

on: [push]

env:
  CI: true
  MNEMONIC: ${{secrets.MNEMONIC}}
  INFURA_API_KEY: ${{secrets.INFURA_API_KEY}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - name: Generate typings
        run: |
          export VIA_IR=true
          pnpm typechain
      - name: Run tests
        run: pnpm test

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - name: Generate typings
        run: |
          export VIA_IR=false
          pnpm typechain
      - name: Generate coverage report
        run: pnpm coverage
      - name: Fail if coverage is below 100
        run: |
          LINES=$(cat ./coverage/coverage-summary.json | jq .total.lines.pct)
          if [ "$LINES" != "100" ]; then exit 1; fi
          STATEMENTS=$(cat ./coverage/coverage-summary.json | jq .total.statements.pct)
          if [ "$STATEMENTS" != "100" ]; then exit 1; fi
          FUNCTIONS=$(cat ./coverage/coverage-summary.json | jq .total.functions.pct)
          if [ "$FUNCTIONS" != "100" ]; then exit 1; fi
          BRANCHES=$(cat ./coverage/coverage-summary.json | jq .total.branches.pct)
          if [ "$BRANCHES" != "100" ]; then exit 1; fi

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - run: pnpm format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - run: pnpm typechain
      - run: pnpm typecheck

  foundry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run Forge build
        run: |
          forge --version
          forge build --force --sizes
        id: build
      - name: Run Forge tests and capture gas snapshots
        run: |
          forge snapshot -vvv --check
        id: gas-check

  documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup
      - name: Generate docs
        run: pnpm docgen
      - name: Check that generated files have no changes
        run: git diff --exit-code -- .
